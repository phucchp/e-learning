openapi: 3.0.0
info:
  description: |
    API Document for Movie Website
  version: '1.0.0'
  title: PBL6-Movie Website API
  contact:
    email: phucchp@gmail.com
servers:
  - url: 'http://localhost:8000/api'
tags:
  - name: authentication
    description: API for Authentication
  - name: course
    description: API for Courses
  - name: category
    description: API for Categories
  - name: language
    description: API for Languages
paths:
  /courses:
    get:
      tags:
        - course
      summary: Get all courses or by filter
      description: Get and search courses API
      parameters:
        - name: search
          in: query
          description: Enter value to search by title and discription of courses
          required: false
          explode: true
          schema:
            type: string
        - name: duration
          in: query
          description: Filter by total durations of courses 
          required: false
          style: form
          explode: true  # Do not explode the array
          schema:
            type: array
            items:
              type: string
              enum:
                - extraShort
                - short
                - medium
                - long
                - extraLong
        - name: price
          in: query
          description: Filter by price of courses (free or paid)
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - free
                - paid
        - name: category
          in: query
          description: Filter by category courses, enter categoryId of Category
          required: false
          explode: true
          schema:
            type: string
        - name: averageRating
          in: query
          description: Filter by average rating course, enter average rating of course to filter
          required: false
          explode: true
          schema:
            type: number
        - name: languageId
          in: query
          description: Filter by language of course
          required: false
          explode: true
          schema:
            type: number
        - name: level
          in: query
          description: Choose level to filter
          required: false
          explode: true
          schema:
            type: array
            items:
              type: number
              enum:
                - 1
                - 2
                - 3
        - name: sort
          in: query
          description: Choose addition to sort
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - price
                - discount
                - duration
                - averageRating
                - totalStudents
                - createdAt
        - name: sortBy
          in: query
          description: Default sort ASC, if you want change to DESC, select below
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - ASC
                - DESC
              default: ASC
        - name: page
          in: query
          description: Use to pagination, default page = 1
          required: false
          explode: true
          schema:
            type: number
        - name: pageSize
          in: query
          description: Use to pagination, default pageSize = 10
          required: false
          explode: true
          schema:
            type: number
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
        '400':
          description: Can not get courses
  /course/{courseId}:
    get:
      tags:
        - course
      summary: Get course details by courseId
      parameters:
        - name: courseId
          in: path
          description: Enter courseId
          required: true
          schema:
            type: string
            default: 'introduction-to-programing'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
        '400':
          description: Can not get category
  /categories:
    get:
      tags:
        - category
      summary: Get all category
      description: Get all category
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
        '400':
          description: Can not get courses
    post:
      tags:
        - category
      summary: Add new category
      responses:
        '200':
          description: Successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  default: "New Category"
      security:
        - bearerAuth: []
  /categories/{categoryId}:
    get:
      tags:
        - category
      summary: Get category by id
      parameters:
        - name: categoryId
          in: path
          description: Enter categoryId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
        '400':
          description: Can not get category
    put:
      tags:
        - category
      summary: Updates a category
      operationId: updateMovieWithForm
      parameters:
        - name: categoryId
          in: path
          description: categoryId of category that needs to be updated
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  default: New Category
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
        '400':
          description: Can not update category
    delete:
      tags:
        - category
      summary: Deletes a category by categoryId
      parameters:
        - name: categoryId
          in: path
          description: categoryId to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: successfully
          content:
            application/json:
              example:
                message: successfully
      security:
        - bearerAuth: []
  /languages:
    get:
      tags:
        - language
      summary: Get all languages
      description: Get all languages
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
        '400':
          description: Can not get courses
    post:
      tags:
        - language
      summary: Add new language
      responses:
        '200':
          description: Successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                languageName:
                  type: string
                  default: "New language"
      security:
        - bearerAuth: []
  /languages/{languageId}:
    get:
      tags:
        - language
      summary: Get language by id
      parameters:
        - name: categoryId
          in: path
          description: Enter categoryId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
        '400':
          description: Can not get language
    put:
      tags:
        - language
      summary: Updates a language
      operationId: updateMovieWithForm
      parameters:
        - name: languageId
          in: path
          description: languageId of language that needs to be updated
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                languageName:
                  type: string
                  default: New language
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
        '400':
          description: Can not update language
    delete:
      tags:
        - language
      summary: Deletes a language by languageId
      parameters:
        - name: languageId
          in: path
          description: languageId to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: successfully
          content:
            application/json:
              example:
                message: successfully
      security:
        - bearerAuth: []